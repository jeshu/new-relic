{
  "numFailedTestSuites": 0,
  "numFailedTests": 0,
  "numPassedTestSuites": 3,
  "numPassedTests": 13,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 0,
  "numTodoTests": 0,
  "numTotalTestSuites": 3,
  "numTotalTests": 13,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1652009505198,
  "success": false,
  "testResults": [
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1652009508908,
        "runtime": 3599,
        "slow": false,
        "start": 1652009505309
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/brikumar2/Projects/TGA/microservices/VidShare/searchvideos/test/index.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Basic routs validations"
          ],
          "duration": 124,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Basic routs validations root route validation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "root route validation"
        },
        {
          "ancestorTitles": [
            "Basic routs validations"
          ],
          "duration": 25,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Basic routs validations health-check route validation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "health-check route validation"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1652009510312,
        "runtime": 1367,
        "slow": false,
        "start": 1652009508945
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/brikumar2/Projects/TGA/microservices/VidShare/searchvideos/test/kafkaMessage.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "messaging tests"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "messaging tests should call mongo save method with provided data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "should call mongo save method with provided data"
        },
        {
          "ancestorTitles": [
            "messaging tests"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "messaging tests should call mongo update method with provided data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "should call mongo update method with provided data"
        },
        {
          "ancestorTitles": [
            "messaging tests"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "messaging tests should call mongo delete method with provided data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "should call mongo delete method with provided data"
        },
        {
          "ancestorTitles": [
            "messaging tests"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "messaging tests should not call update/save/delete if topic not matched",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "should not call update/save/delete if topic not matched"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1652009511834,
        "runtime": 1491,
        "slow": false,
        "start": 1652009510343
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/brikumar2/Projects/TGA/microservices/VidShare/searchvideos/test/searchroute.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Search video specs suit"
          ],
          "duration": 50,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search video specs suit should retun data when search with query",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "should retun data when search with query"
        },
        {
          "ancestorTitles": [
            "Search video specs suit"
          ],
          "duration": 22,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search video specs suit should retun data when search without query",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "should retun data when search without query"
        },
        {
          "ancestorTitles": [
            "Search video specs suit"
          ],
          "duration": 22,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search video specs suit should retun data as empty array for query not matched",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "should retun data as empty array for query not matched"
        },
        {
          "ancestorTitles": [
            "Search video specs suit"
          ],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search video specs suit should retun video001 data when requested as for videoId",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "should retun video001 data when requested as for videoId"
        },
        {
          "ancestorTitles": [
            "Search video specs suit"
          ],
          "duration": 23,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search video specs suit should retun data null for non-existing videoIds",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "should retun data null for non-existing videoIds"
        },
        {
          "ancestorTitles": [
            "Search video specs suit"
          ],
          "duration": 20,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search video specs suit should retun error in search if some error ouccered.",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "should retun error in search if some error ouccered."
        },
        {
          "ancestorTitles": [
            "Search video specs suit"
          ],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search video specs suit should retun error in find by video Id if some error ouccered.",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "should retun error in find by video Id if some error ouccered."
        }
      ],
      "failureMessage": null
    }
  ],
  "wasInterrupted": false
}